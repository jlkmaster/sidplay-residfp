/*
 * This file is part of libsidplayfp, a SID player engine.
 *
 *  Copyright (C) 2015 Leandro Nini
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include "UnitTest++/UnitTest++.h"
#include "UnitTest++/TestReporter.h"

#include "../src/sidplayfp/SidTune.h"

using namespace UnitTest;

SUITE(PSID)
{

TEST(TestBrokenTune)
{
    const uint8_t buffer[] = {
        0x52, 0x53, 0x49, 0x44, // RSID
        0x00, 0x02,             // version
        0x00, 0x7C,             // dataOffset
        0x00, 0x00,             // loadAddress
        0x00, 0x00,             // initAddress
        0x00, 0x00,             // playAddress
        0x00, 0x01,             // songs
        0x00, 0x01,             // startSong
        0x00, 0x00, 0x00, 0x00, // speed
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // name
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // author
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // released
        0x00, 0x00, 0x00, 0x00  // data
    };

    SidTune tune(buffer, 126);
    CHECK(!tune.getStatus());

    CHECK_ARRAY_EQUAL("SIDTUNE ERROR: Bad address data", tune.statusString(), 31);
}

}
